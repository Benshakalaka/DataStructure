折半查找性能分析

折半查找过程可由图中二叉树所示来表示。
找到有序表中任一记录的过程就是走了一条从根节点到与该记录相应的节点的路径，给定值进行比较的关键字个数恰为该节点在判定数上的层次数。因此，折半查找在成功查找时进行比较的Ci(关键词个数)不超过树的深度，至多为 [logn]+1。

假设每个点查找的几率相等，折半查找的平均长度为：
			ASL = ∑PiCi (1<=i<=n)
			    = (1/n)*∑(j * 2^(j-1)) (1<=j<=h)	//解释：(1/n为几率，j为从第一层到最后一层(j即为找到该关键值所需经历多少个节点，经历多少步 即Ci)，2^(j-1)为该层共有多少个点)
			    = ((n+1)*log(n+1))/n-1 		//（求解过程P233）


由此，折半查找比顺序查找效率更高，但折半查找只适用于有序表，且限于顺序存储结构