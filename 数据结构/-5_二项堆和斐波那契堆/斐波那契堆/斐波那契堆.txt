主要借鉴：http://www.cnblogs.com/skywang12345/p/3659060.html
P307
 斐波那契堆数据结的两种用途：
	第一种：支持一系列操作，构成了所谓i额的“可合并堆”
	第二种：一些操作可以在常数摊还时间内完成，使得这种数据结构非常适合于需要频繁调用这些操作的应用。

结构：
	一个斐波那契堆是一些列具有最小堆的有根树的集合。也就是说，每棵树均遵循最小堆性质：每个节点的关键字大于或等于它的父节点的关键字。

	每个节点包含一个指向父节点的指针 和 一个指向某一个孩子的指针。 x的所有孩子被链接成一个环形的双向链表，称为x的孩子链表。孩子链表中的每个孩子y均有指针 left 和 right ，分别指向y的左兄弟和右兄弟。孩子链表中各兄弟的出现次序是任意的
	为什么采用环形链表呢？
		① 可以在O（1）时间内从任何位置插入或删除
		② 可在O（1）时间内将两个这样的链表连接在一起

	斐波那契堆是一种松散的二项堆，与二项堆的主要区别在于构成斐波那契堆得树可以不是二项树，并且这些树的根排列是无序的（二项堆的根结点排序是按照结点个数排序的，不是按照根结点的大小）。

总结：
	这个斐波那契堆确实有几个难点。
	插入一个节点：
		很简单，就相当于在一个双向链表里插入一个节点。这个双向链表是根链表。
	合并：
		也很简单，跟插入一样，将两个双向链表合并。
	抽取最小点：
		难点在这里。
		① 将要抽取的目标节点的所有孩子都从目标节点中取出
		② 取出的孩子放入根链中
		③ 删去目标节点
		④ 重新将整个根链用哈希表的方式整合（相同度的放在一起）
		⑤ 将整合后的所有点（这个点指的是一棵树 可能有1个或多个节点）放回根链
	降低点中的值：
		① 首先降低值
		② 将该点取出来
		③ 将该点放入根链
		④ 级联剪切
	增加值：
		与降低差不多不过多一步
		就是将该节点中所有孩子节点都放入根链表中去
	删除节点：
		利用降低值函数将该节点降低至很小很小
		利用抽取最小点函数
	要注意的点：
		① 在一个节点作为孩子插入在另一个节点中时候，必须要将这个节点的right和left设置好。因为你看 如果没有设置right和left，那么插入一个点的时候（如果放在该节点右边） 这个节点的左边始终无法安置好（假设这个点本身是新的 那么左边就是空 会出错，然而假设这个点原本是一个双向链表中的 左边则仍然会指向原来的左边  这样会导致节点的的跳跃）
		② 度 不是指深度！！！
		③ 什么是级联剪切：利用一个标记。该标记的含义是：指示节点x自从上一次成为另一个节点的孩子之后，是否失去过孩子。新产生的节点是未被标记的，并且当节点x成为另一个节点的孩子时，它便成为未被标记的节点。   若一个节点被标记过，那么若该节点失去了一个孩子，则该节点也要被移出来放入根链中去。这样逐级往上递归