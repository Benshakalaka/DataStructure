既然增加k能减少s，那么减少k，但是单纯的增加k会导致内部归并时间的增加。
	比如2-路归并（举例： 甲组：3，4，8；乙组：1，5，9   那么要取到最小的数要进行1次比较，因此归并结束总共进行了5个比较）
	再看k-路归并，总共u个记录分布在k个归并段上，选出最小的记录需要进行k-1次比较。因此总共要进行（k-1）*（u-1）次比较。由此，对n个记录进行外排时，比较总次数为s*（k-1）*（n-1）.	
	由式子可以得到：
		logk(m) * (k-1) * (n-1)  = [log2(m)/log2(k)] * (k-1) * (m-1)
	由于 (k-1) / (log2(k))随k的增长而增长，则内部时间也随k的增长而增长。
	
	但是，若k路归并时利用败者树，则可以使总的归并时间变为 log2(m) * (n-1) 显然，式子与k无关，不再随着k的增长而增长